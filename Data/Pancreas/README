######################################################################
# Step.1 : Download GSE84133_RAW.tar from GEO (GSE84133)
# https://www.ncbi.nlm.nih.gov/geo/download/?acc=GSE84133&format=file
######################################################################

######################################################################
# Step.2 : Perform the R script below
######################################################################
library("matrixStats")
library("RColorBrewer")

# Load data
human3 <- read.csv("GSE84133_RAW/GSM2230759_human3_umifm_counts.csv",
	stringsAsFactor=FALSE)
Pancreas <- t(human3[, 4:ncol(human3)])

label.Pancreas <- human3[,3]
names(label.Pancreas) <- label.Pancreas

label.Pancreas[grep("acinar", label.Pancreas)] <-
	brewer.pal(11, "Spectral")[1]
label.Pancreas[grep("activated_stellate", label.Pancreas)] <-
	brewer.pal(11, "Spectral")[2]
label.Pancreas[grep("alpha", label.Pancreas)] <-
	brewer.pal(11, "Spectral")[3]
label.Pancreas[grep("beta", label.Pancreas)] <-
	brewer.pal(11, "Spectral")[4]
label.Pancreas[grep("delta", label.Pancreas)] <-
	brewer.pal(11, "Spectral")[6]
label.Pancreas[grep("ductal", label.Pancreas)] <-
	brewer.pal(11, "Spectral")[7]
label.Pancreas[grep("endothelial", label.Pancreas)] <-
	brewer.pal(11, "Spectral")[8]
label.Pancreas[grep("epsilon", label.Pancreas)] <-
	brewer.pal(11, "Spectral")[9]
label.Pancreas[grep("gamma", label.Pancreas)] <-
	brewer.pal(11, "Spectral")[10]
label.Pancreas[grep("macrophage", label.Pancreas)] <-
	brewer.pal(8, "Accent")[1]
label.Pancreas[grep("mast", label.Pancreas)] <-
	brewer.pal(8, "Accent")[2]
label.Pancreas[grep("quiescent_stellate", label.Pancreas)] <-
	brewer.pal(8, "Accent")[3]
label.Pancreas[grep("schwann", label.Pancreas)] <-
	brewer.pal(8, "Accent")[4]
label.Pancreas[grep("t_cell", label.Pancreas)] <-
	brewer.pal(8, "Accent")[5]

# Remove variance 0 genes
Pancreas <- Pancreas[
	which(rowVars(Pancreas) != 0), ]
# Remove ERCC
Pancreas <- Pancreas[
	grep("ERCC", rownames(Pancreas), invert = TRUE), ]


# save image
save.image("Pancreas.RData")

# Count: 16669 × 3605
write.table(Pancreas, "Data.csv", quote=FALSE, row.names=FALSE, col.names=FALSE, sep=",")

# Log10(Count + 1): 16669 × 3605
write.table(log10(Pancreas + 1), "LogData.csv", quote=FALSE, row.names=FALSE, col.names=FALSE, sep=",")

# CPM: 16669 × 3605
libsize <- colSums(Pancreas)
CPM <- 1e6 * t(t(Pancreas) / libsize)
write.table(CPM,
	"CPM.csv", quote=FALSE, row.names=FALSE, col.names=FALSE, sep=",")

# Log10(CPM + 1): 16669 × 3605
write.table(log10(CPM + 1),
	"LogCPM.csv", quote=FALSE, row.names=FALSE, col.names=FALSE, sep=",")

# CP10K: 16669 × 3605
CP10K <- 1e4 * t(t(Pancreas) / libsize)
write.table(CP10K,
	"CP10K.csv", quote=FALSE, row.names=FALSE, col.names=FALSE, sep=",")

# Log10(CP10K + 1): 16669 × 3605
write.table(log10(CP10K + 1),
	"LogCP10K.csv", quote=FALSE, row.names=FALSE, col.names=FALSE, sep=",")

# CPMED: 16669 × 3605
CPMED <- median(libsize) * t(t(Pancreas) / libsize)
write.table(CPMED,
	"CPMED.csv", quote=FALSE, row.names=FALSE, col.names=FALSE, sep=",")

# Log10(CPMED+ 1): 16669 × 3605
LogCPMED <- log10(CPMED + 1)
write.table(LogCPMED,
	"LogCPMED.csv", quote=FALSE, row.names=FALSE, col.names=FALSE, sep=",")

# Log10(CPMED+ 1)': 3605 × 16669
t_scaledLogCPMED <- scale(t(LogCPMED), scale=FALSE)
write.table(t_scaledLogCPMED,
	"t_scaledLogCPMED.csv", quote=FALSE, row.names=FALSE, col.names=FALSE, sep=",")
